//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.ServiceSoap {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ZHCGWebService/zhcgforphone", ConfigurationName="ServiceSoap.ZHCGWebServiceSoap")]
    public interface ZHCGWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="ZHCGWebService/zhcgforphone/GetTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTask(string userID, int skipCount, int takeCount, string isProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="ZHCGWebService/zhcgforphone/GetMedia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMedia(string taskNum, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="ZHCGWebService/zhcgforphone/TaskFeedBack", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TaskFeedBack(string disposal, string medias, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="ZHCGWebService/zhcgforphone/GetHydrantsByPage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetHydrantsByPage(int skipCount, int takeCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="ZHCGWebService/zhcgforphone/GetAbnormalHydrants", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAbnormalHydrants();
        
        [System.ServiceModel.OperationContractAttribute(Action="ZHCGWebService/zhcgforphone/GetHydrantData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetHydrantData(decimal eid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ZHCGWebServiceSoapChannel : Common.ServiceSoap.ZHCGWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZHCGWebServiceSoapClient : System.ServiceModel.ClientBase<Common.ServiceSoap.ZHCGWebServiceSoap>, Common.ServiceSoap.ZHCGWebServiceSoap {
        
        public ZHCGWebServiceSoapClient() {
        }
        
        public ZHCGWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZHCGWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZHCGWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZHCGWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetTask(string userID, int skipCount, int takeCount, string isProcess) {
            return base.Channel.GetTask(userID, skipCount, takeCount, isProcess);
        }
        
        public string GetMedia(string taskNum, string type) {
            return base.Channel.GetMedia(taskNum, type);
        }
        
        public string TaskFeedBack(string disposal, string medias, string user) {
            return base.Channel.TaskFeedBack(disposal, medias, user);
        }
        
        public string GetHydrantsByPage(int skipCount, int takeCount) {
            return base.Channel.GetHydrantsByPage(skipCount, takeCount);
        }
        
        public string GetAbnormalHydrants() {
            return base.Channel.GetAbnormalHydrants();
        }
        
        public string GetHydrantData(decimal eid) {
            return base.Channel.GetHydrantData(eid);
        }
    }
}
