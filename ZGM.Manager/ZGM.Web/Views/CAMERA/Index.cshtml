@{
    Layout = null;
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>

    <link href="/Scripts/assets/data-tables/demo_table.css" rel="stylesheet" />
    <link href="~/Scripts/assets/data-tables/DT_bootstrap.css" rel="stylesheet" />
    <link href="/Scripts/assets/zTree/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />

    <script src="/Scripts/jquery-1.7.1.js"></script>

    <script src="/Scripts/assets/data-tables/jquery.datatables.min.js"></script>
    <script src="/Scripts/assets/data-tables/DT_bootstrap.js"></script>
    <script src="/Scripts/assets/data-tables/PLE_DT_bootstrap.js"></script>

    <script src="/Scripts/assets/zTree/js/jquery.ztree.core.js"></script>
    <script src="/Scripts/assets/zTree/js/jquery.ztree.excheck.js"></script>
    <script src="/Scripts/assets/zTree/js/jquery.ztree.exedit.js"></script>

    <link href="/Content/css/OA.css" rel="stylesheet" />
    <link href="~/Scripts/layer/skin/layer.css" rel="stylesheet" />
    <link href="~/Scripts/layer/skin/seaning/style.css" rel="stylesheet" />
    <script src="~/Scripts/layer/layer.js"></script>
    <script src="~/Scripts/js/PageNotBack.js"></script>
    <script type="text/javascript">
        layer.config({
            skin: 'layer-ext-seaning',
            offset: ['100px', '33%'],
            title: '提示',
            moveOut: true,
            closeBtn: false,
            extend: 'skin/seaning/style.css'
        });

    </script>
    <script type="text/javascript">
        var oTable = null;

        $(document).ready(function () {
            $("#ParentIDPid").val("0");
            var url = "/CAMERA/GetUnits?ParentID=";
            var setting = {
                callback: {
                    onClick: function (event, treeId, treeNode) {
                        var parentid = treeNode.value;
                        var parentidpid = treeNode.pId;
                        $("#ParentIDPid").val(parentidpid);
                        $("#ParentID").val(parentid);
                        //改变导航条
                        $("#tit").text("监控列表");
                        // 隐藏添加列表
                        $("#addunit").hide();
                        // 显示子节点列表数据
                        BindDataTable(url + treeNode.value + "&random=" + Math.random());
                    },
                }
            };
            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: '/CAMERA/GetCameraTree?random=' + Math.random(),
                success: function (data) {
                    if (data != null && data != "") {
                        unitIDValue = '@ViewData["ParentID"]';
                        var zNodes = data;
                        $.fn.zTree.init($("#tree"), setting, zNodes);
                        var treeObj = $.fn.zTree.getZTreeObj("tree");

                        var nodes = treeObj.getNodes();

                        var node = treeObj.getNodeByParam("value", unitIDValue, null);
                        treeObj.selectNode(node);
                        treeObj.expandNode(node, true);
                        BindDataTable(url + unitIDValue + "&random=" + Math.random());

                        var nodes = treeObj.getNodes();
                        for (var i = 0; i < nodes.length; i++) {
                            EachChildNodes(nodes[i], treeObj);
                        }
                    }
                }
            });

            //绑定列表
            function BindDataTable(url) {
                if (oTable != null) {
                    oTable.fnSettings().sAjaxSource = url;
                    oTable.fnDraw(true);
                } else {
                    oTable = $('#UnitTable').dataTable({
                        sAjaxSource: url,

                        aoColumns: [
                            { "mDataProp": "UnitName" },
                            { "mDataProp": "UnitTypeName" },
                            { "mDataProp": "SortNum" },
                            {
                                "mDataProp": function (data) {
                                    var del = "<input id='" + data.ItemId + "'  type='checkbox' name='deletecheckbox' />";
                                    return del;
                                }, "sClass": "center"
                            }
                        ],
                        fnDrawCallback: function (oSettings) {
                            var pagerIndex = oSettings._iDisplayStart / oSettings._iDisplayLength + 1;
                            var $currentPager = $(".dataTables_paginate span a:contains('" + pagerIndex + "')");
                            $currentPager.attr("style", "font-weight :bold;!important");
                        }
                    });
                }
            }
        });

        //添加监控专题按钮
        function addbtn_click() {
            var parentidpid = $("#ParentIDPid").val();
            if (parentidpid > 0) {
                layer.alert('二级元素不能再添加子元素了。', {
                    icon: 0,
                    skin: 'layer-ext-seaning'
                });;
                return;
            }
            ShowDiv('MyDiv', 'fade');
        }

        //删除监控专题按钮
        function delbtn_click() {
            var parentid = $("#ParentID").val();
            if (parentid == "" || parentid == null || parentid == "0") {
                layer.alert('请先选择要删除的监控专题!', {
                    icon: 0,
                    skin: 'layer-ext-seaning'
                });
            } else {

                layer.confirm('是否确认删除?', {
                    btn: ['是', '否'],
                    icon: 4,
                    //按钮
                }, function () {
                    url = "@Url.Action("DeleteCameraTheme")";
                    $.getJSON(url, { "parentid": parentid }, function (data) {
                        if (data == 1) {
                            location.href = '/CAMERA/Index';
                        }
                        else if (data == 2) {
                            layer.alert('请先删除此专题下的监控元素!', {
                                icon: 0,
                                skin: 'layer-ext-seaning'
                            });
                        }
                        else {
                            layer.alert('删除失败,请重试!', {
                                icon: 0,
                                skin: 'layer-ext-seaning'
                            });
                        }
                    });
                }, function () {
                    layer.close();
                });
            }
        }

        //弹出层上面的添加专题确定按钮
        function addok_click() {
            var parentid = $("#ParentID").val();

            var parentidpid = $("#ParentIDPid").val();
            if (parentidpid > 0) {
                layer.alert('二级元素不能再添加子元素了。', {
                    icon: 0,
                    skin: 'layer-ext-seaning'
                });
                return;
            }
            if (parentid == "" || parentid == null) {
                parentid = 0;
            }
            var Themename = $("#camerathemename").val();
            if (Themename == "") {
                layer.alert('请填写监控专题名称!', {
                    icon: 0,
                    skin: 'layer-ext-seaning'
                });

                return;
            }
            var ifline = 0;
            var cc = document.getElementsByName("ifline");
            if (cc[0].checked == true) {
                ifline = 1;
            }
            url = "@Url.Action("AddCameraTheme")";
            $.getJSON(url, { "Themename": Themename, "ifline": ifline, "parentid": parentid, "parentidpid": parentidpid },
                function (data) {
                    if (data == 1) {
                        CloseDiv('MyDiv', 'fade');
                        location.href = '/CAMERA/Index';
                    } else {
                        layer.alert('添加失败,请重试!', {
                            icon: 0,
                            skin: 'layer-ext-seaning'
                        });
                    }
                });
        };


        //添加监控
        function additem_click() {
            var parentid = $("#ParentID").val();
            if (parentid == "" || parentid == null || parentid == "0") {
                layer.alert('请先选择要添加元素的监控专题!', {
                    icon: 0,
                    skin: 'layer-ext-seaning'
                });
            } else {
                var ParentIDPid = $("#ParentIDPid").val();

                if (ParentIDPid != 0) {
                    ShowDiv('MyDivTree', 'fade');
                    var setting = {
                        check: {
                            enable: true
                        },
                        view: {
                            dblClickExpand: false
                        },
                        data: {
                            simpleData: {
                                enable: true
                            }
                        },
                        callback: {//该事件在节点被单击后触发
                            onCheck: function (e, treeId, zNodes2) {
                                var zTree = $.fn.zTree.getZTreeObj("chkboxTree");
                                nodes = zTree.getCheckedNodes(true);
                                //定义用户组变量
                                var childrenobj = "";
                                for (var i = 0, l = nodes.length; i < l; i++) {
                                    if (nodes[i].type != "组织") {
                                        childrenobj += nodes[i].value + ",";
                                    }
                                }
                                if (childrenobj.length > 0)
                                    childrenobj = childrenobj.substring(0, childrenobj.length - 1);
                                $("#SelectUserIds").val(childrenobj);

                                //定义用户号码变量
                                var userNames = "";
                                for (var i = 0, l = nodes.length; i < l; i++) {
                                    if (nodes[i].type != "组织") {
                                        userNames += nodes[i].name + ",";
                                    }
                                }

                                if (userNames.length > 0)
                                    userNames = userNames.substring(0, userNames.length - 1);

                                $("#SelectUserNames").val(userNames);
                            }
                        },
                    };
                    $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        url: '/CAMERA/GetCameraItemTree?random=' + Math.random(),
                        success: function (data) {
                            if (data != null && data != "") {
                                unitIDValue = '@ViewData["ParentUnitID"]';
                                    var zNodes = data;
                                    $.fn.zTree.init($("#chkboxTree"), setting, zNodes);
                                    var treeObj = $.fn.zTree.getZTreeObj("chkboxTree");
                                    var node = treeObj.getNodeByParam("value", unitIDValue, null);
                                    treeObj.selectNode(node);
                                    treeObj.expandNode(node, true);
                                }
                        }

                    });
                    } else {
                        layer.alert('父级专题不能添加监控!', {
                            icon: 0,
                            skin: 'layer-ext-seaning'
                        });
                    }
                }
            };

            function showMenu() {
                var cityObj = $("#SelectUserNames");
                var cityOffset = $("#SelectUserNames").offset();
                var divWidth = $("#SelectUserNames").width();

                $("#menuContent").css({ left: cityOffset.left + "px", top: cityOffset.top + cityObj.outerHeight() + "px", width: divWidth * 1.03 }).slideDown("fast");
                $("body").bind("mousedown", onBodyDown);
            }
            function onBodyDown(event) {
                if (!(event.target.id == "menuBtn" || event.target.id == "SelectUserNames" || event.target.id == "menuContent" || $(event.target).parents("#menuContent").length > 0)) {
                    hideMenu();
                }
            }
            function hideMenu() {
                $("#menuContent").fadeOut("fast");
                $("#menuCheck").fadeOut("fast");
                $("body").unbind("mousedown", onBodyDown);
            }

            //添加监控信息
            function additems_click() {
                var ids = $("#SelectUserIds").val();
                var themeid = $("#ParentID").val();
                if (themeid == "" || themeid == null) {
                    layer.alert('请先选择监控左侧专题!', {
                        icon: 0,
                        skin: 'layer-ext-seaning'
                    });
                    return;
                }
                url = "@Url.Action("AddCameraItems")";
                $.getJSON(url, { "themeid": themeid, "CameraItemIds": ids }, function (data) {
                    if (data == 1) {
                        CloseDiv('MyDivTree', 'fade');
                        location.href = '/CAMERA/Index';
                    }
                    else {
                        layer.alert('添加失败,请重试!', {
                            icon: 0,
                            skin: 'layer-ext-seaning'
                        });
                    }
                });
            }

            //删除监控信息
            function deleteitem_click() {
                var cc = document.getElementsByName("deletecheckbox");
                var ids = "";
                for (var i = 0; i < cc.length; i++) {
                    if (cc[i].checked == true) {
                        ids += cc[i].id + ",";
                    }
                }
                if (ids == "") {
                    layer.alert('请先选择要删除的监控!', {
                        icon: 0,
                        skin: 'layer-ext-seaning'
                    });
                    return;
                }

                layer.confirm('是否确认删除?', {
                    btn: ['是', '否'],
                    icon: 4,
                    //按钮
                }, function () {
                    url = "@Url.Action("DeleteCameraItems")";
                $.getJSON(url, { "themeid": ids }, function (data) {
                    if (data == 1) {
                        //alert("删除成功");
                        location.href = '/CAMERA/Index';
                    }
                    else {
                        layer.alert('删除失败,请重试!', {
                            icon: 0,
                            skin: 'layer-ext-seaning'
                        });
                    }
                });
            }, function () {
                layer.close();
            });

            }

            //弹出隐藏层
            function ShowDiv(show_div, bg_div) {
                document.getElementById(show_div).style.display = 'block';
                document.getElementById(bg_div).style.display = 'block';
                var bgdiv = document.getElementById(bg_div);
                bgdiv.style.width = document.body.scrollWidth;
                $("#" + bg_div).height($(document).height());
            };
            //关闭弹出层
            function CloseDiv(show_div, bg_div) {
                document.getElementById(show_div).style.display = 'none';
                document.getElementById(bg_div).style.display = 'none';
            };

            function Click_Div(show_div, bg_div) {
                document.getElementById(show_div).style.display = 'none';
                document.getElementById(bg_div).style.display = 'none';
            }

            function allcheck_click() {
                var allck = document.getElementsByName("allcheck");
                if (allck[0].checked == true) {
                    var dck = document.getElementsByName("deletecheckbox");
                    $("[name = deletecheckbox]:checkbox").attr("checked", true);
                }
                else {
                    var dck = document.getElementsByName("deletecheckbox");
                    $("[name = deletecheckbox]:checkbox").attr("checked", false);
                }

            }

            //取消ztree所有的节点选择

            function CancelSelected(event) {

                //这里的treeDemo是加载ztree树的容器id名称


                if (event.target.id == null || event.target.id == "" || event.target.id == "chkboxTree") {


                    $("#ParentID").val("0");

                    var treeObj = $.fn.zTree.getZTreeObj("tree");

                    var nodes = treeObj.getNodes();

                    for (var i = 0; i < nodes.length; i++) {

                        EachChildNodes(nodes[i], treeObj);

                    }

                }
            }
            //递归遍历取消子节点的选择

            function EachChildNodes(node, treeObj) {


                //首先取消当前节点的选择

                treeObj.cancelSelectedNode(node);

                //判断是否有子节点

                for (var i = 0; i < node.children.length; i++) {

                    EachChildNodes(node.children[i], treeObj);

                }

            }
    </script>
    <style>
        #addtheme span {
            height: 35px;
            line-height: 35px;
            font-size: 16px;
        }

        .black_overlay {
            display: none;
            position: absolute;
            top: 0%;
            left: 0%;
            width: 100%;
            height: 100%;
            background-color: black;
            z-index: 1001;
            -moz-opacity: 0.8;
            opacity: .80;
            filter: alpha(opacity=80);
        }

        .white_content {
            display: none;
            position: absolute;
            top: 10%;
            left: 20%;
            width: 630px;
            height: 350px;
            background-color: white;
            z-index: 1002;
            overflow: auto;
        }

        .btn_ico_a_delete {
            margin-left: -10px;
        }
    </style>
</head>
<body onclick="CancelSelected(event)">
    <div class="place">
        <span>位置：</span>
        <ul class="placeul">
            <li>监控专题</li>
        </ul>
    </div>
    <div style="width: 18%; float: left; margin: 10px">
        <div class="formtitle">
            <input id="ParentID" type="text" style="display: none;" />
            <input id="ParentIDPid" type="text" style="display: none;" />
            <input type="button" id="xzjkzt" onclick="addbtn_click();" value="新增监控专题" style="background-color: #4198ca; color: #ffffff; width: 45%; padding: 3px 3px; cursor: pointer;" />&nbsp;&nbsp;
            <input id="scjkzt" type="button" onclick="delbtn_click();" value="删除监控专题" style="background-color: #4198ca; color: #ffffff; width: 45%; padding: 3px 3px; cursor: pointer;" />

        </div>
        <div>
            <ul id="tree" class="ztree"></ul>
        </div>
    </div>


    <div style="width: 75%; float: left; border: 1px;">
        <div class="formbody">
            <div class="formtitle"><span id="tit">监控列表</span></div>
            <div id="listunit">
                <ul class="seachform">
                    <li>
                        <input name="" type="button" class="sure" value="添加监控" id="addUnit" onclick="additem_click();" />
                    </li>
                    <li>
                        <input name="" type="button" class="sure" value="删除监控" id="deleteUnit" onclick="deleteitem_click();" />
                    </li>
                </ul>
                <div style="clear: both; margin-top: 10px;" class="tableListDiv">
                    <table class="tablelist" id="UnitTable" style="text-align: center">
                        <thead>
                            <tr>
                                <th style="text-align: center">监控名称</th>
                                <th style="text-align: center">监控类型</th>
                                <th style="text-align: center; width: 135px;">监控排序</th>
                                <th style="text-align: center; width: 135px;">选择删除<input type="checkbox" name="allcheck" onclick="allcheck_click();" /></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div style="display: none;" id="addunit">
            </div>
            <div style="display: none;" id="editunit">
            </div>
        </div>
    </div>

    @Html.Hidden("ParentID")


    <!--弹出层时背景层DIV-->
    <div id="fade" class="black_overlay"></div>
    <div id="MyDiv" class="white_content">
        <div class="tiptop"><span>添加监控</span><a onclick="Click_Div('MyDiv','fade')"></a></div>
        <div id="addtheme" style="text-align: center; margin-top: 60px;">
            <span>专题名称：</span><input id="camerathemename" type="text" style="height: 30px; line-height: 30px; font-size: 16px; border: 1px solid #808080;" />&nbsp;&nbsp;&nbsp;&nbsp;<span> 是否连线：</span><input id="checkboxa" type="checkbox" name="ifline" value="1" style="height: 20px; width: 20px;" />&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" style="height: 30px; line-height: 30px; font-size: 16px; background-color: #4198ca; color: #ffffff; width: 10%; cursor: pointer;" value="确定" onclick="addok_click();" />
        </div>
    </div>
    <div id="MyDivTree" style="width: 620px; height: 400px;" class="white_content">
        <div class="tiptop"><span>添加监控</span><a onclick="Click_Div('MyDivTree','fade')"></a></div>
        <input type="text" id="SelectUserIds" name="SelectUserIds" style="display: none;" value="" />
        <ul id="chkboxTree" class="ztree" style="margin-top: 0; width: 600px; height: 300px; margin-left: 5px; border: 1px solid #cdcdcd; background-color: rgb(255, 255, 255); color: #393939; overflow-y: auto;"></ul>
        <div>
            <input type="button" id="additemsbtn" style="margin-right: 20px; float: right; margin-top: 10px; height: 30px; line-height: 30px; font-size: 16px; background-color: #4198ca; color: #ffffff; width: 10%; cursor: pointer;" value="确定" onclick="additems_click();"></div>
    </div>
    <input type="hidden" id="ifadditems" />
</body>
</html>
