$(function () {

    $("a[href^=#]").click(function (e) { e.preventDefault() });

    $(".box .box-tool > a").click(function (e) {
        if ($(this).data("action") == undefined) { return } var t = $(this).data("action"); var n = $(this); switch (t) { case "collapse": $(n).children("i").addClass("anim-turn180"); $(this).parents(".box").children(".box-content").slideToggle(500, function () { if ($(this).is(":hidden")) { $(n).children("i").attr("class", "icon-chevron-down") } else { $(n).children("i").attr("class", "icon-chevron-up") } }); break; case "close": $(this).parents(".box").fadeOut(500, function () { $(this).parent().remove() }); break; case "config": $("#" + $(this).data("modal")).modal("show"); break } e.preventDefault()
    });

    if (jQuery().dataTable) {
        $("#table1").dataTable({ "sPaginationType": "full_numbers" })
    }

    if (jQuery().plot) {
        var f = []; var l = 250; function c() { if (f.length > 0) f = f.slice(1); while (f.length < l) { var e = f.length > 0 ? f[f.length - 1] : 50; var t = e + Math.random() * 10 - 5; if (t < 0) t = 0; if (t > 100) t = 100; f.push(t) } var n = []; for (var r = 0; r < f.length; ++r) n.push([r, f[r]]); return n } function h() { if ($("#chart_1").size() == 0) { return } var e = []; for (var t = 0; t < Math.PI * 2; t += .25) e.push([t, Math.sin(t)]); var n = []; for (var t = 0; t < Math.PI * 2; t += .25) n.push([t, Math.cos(t)]); var r = []; for (var t = 0; t < Math.PI * 2; t += .1) r.push([t, Math.tan(t)]); $.plot($("#chart_1"), [{ label: "sin(x)", data: e }, { label: "cos(x)", data: n }, { label: "tan(x)", data: r }], { series: { lines: { show: true }, points: { show: true } }, xaxis: { ticks: [0, [Math.PI / 2, "π/2"], [Math.PI, "π"], [Math.PI * 3 / 2, "3π/2"], [Math.PI * 2, "2π"]] }, yaxis: { ticks: 10, min: -2, max: 2 }, grid: { backgroundColor: { colors: ["#fff", "#eee"] } } }) } function p() { function e() { return Math.floor(Math.random() * (1 + 40 - 20)) + 20 } function i(e, t, n) { $('<div id="tooltip">' + n + "</div>").css({ position: "absolute", display: "none", top: t + 5, left: e + 15, border: "1px solid #333", padding: "4px", color: "#fff", "border-radius": "3px", "background-color": "#333", opacity: .8 }).appendTo("body").fadeIn(200) } if ($("#chart_2").size() == 0) { return } var t = [[1, e()], [2, e()], [3, 2 + e()], [4, 3 + e()], [5, 5 + e()], [6, 10 + e()], [7, 15 + e()], [8, 20 + e()], [9, 25 + e()], [10, 30 + e()], [11, 35 + e()], [12, 25 + e()], [13, 15 + e()], [14, 20 + e()], [15, 45 + e()], [16, 50 + e()], [17, 65 + e()], [18, 70 + e()], [19, 85 + e()], [20, 80 + e()], [21, 75 + e()], [22, 80 + e()], [23, 75 + e()], [24, 70 + e()], [25, 65 + e()], [26, 75 + e()], [27, 80 + e()], [28, 85 + e()], [29, 90 + e()], [30, 95 + e()]]; var n = [[1, e() - 5], [2, e() - 5], [3, e() - 5], [4, 6 + e()], [5, 5 + e()], [6, 20 + e()], [7, 25 + e()], [8, 36 + e()], [9, 26 + e()], [10, 38 + e()], [11, 39 + e()], [12, 50 + e()], [13, 51 + e()], [14, 12 + e()], [15, 13 + e()], [16, 14 + e()], [17, 15 + e()], [18, 15 + e()], [19, 16 + e()], [20, 17 + e()], [21, 18 + e()], [22, 19 + e()], [23, 20 + e()], [24, 21 + e()], [25, 14 + e()], [26, 24 + e()], [27, 25 + e()], [28, 26 + e()], [29, 27 + e()], [30, 31 + e()]]; var r = $.plot($("#chart_2"), [{ data: t, label: "Unique Visits" }, { data: n, label: "Page Views" }], { series: { lines: { show: true, lineWidth: 2, fill: true, fillColor: { colors: [{ opacity: .05 }, { opacity: .01 }] } }, points: { show: true }, shadowSize: 2 }, grid: { hoverable: true, clickable: true, tickColor: "#eee", borderWidth: 0 }, colors: ["#FCB322", "#A5D16C", "#52e136"], xaxis: { ticks: 11, tickDecimals: 0 }, yaxis: { ticks: 11, tickDecimals: 0 } }); var s = null; $("#chart_2").bind("plothover", function (e, t, n) { $("#x").text(t.x.toFixed(2)); $("#y").text(t.y.toFixed(2)); if (n) { if (s != n.dataIndex) { s = n.dataIndex; $("#tooltip").remove(); var r = n.datapoint[0].toFixed(2), o = n.datapoint[1].toFixed(2); i(n.pageX, n.pageY, n.series.label + " of " + r + " = " + o) } } else { $("#tooltip").remove(); s = null } }) } function d() { function o() { i = null; var e = s; var t = plot.getAxes(); if (e.x < t.xaxis.min || e.x > t.xaxis.max || e.y < t.yaxis.min || e.y > t.yaxis.max) return; var n, o, u = plot.getData(); for (n = 0; n < u.length; ++n) { var a = u[n]; for (o = 0; o < a.data.length; ++o) if (a.data[o][0] > e.x) break; var f, l = a.data[o - 1], c = a.data[o]; if (l == null) f = c[1]; else if (c == null) f = l[1]; else f = l[1] + (c[1] - l[1]) * (e.x - l[0]) / (c[0] - l[0]); r.eq(n).text(a.label.replace(/=.*/, "= " + f.toFixed(2))) } } if ($("#chart_3").size() == 0) { return } var e = [], t = []; for (var n = 0; n < 14; n += .1) { e.push([n, Math.sin(n)]); t.push([n, Math.cos(n)]) } plot = $.plot($("#chart_3"), [{ data: e, label: "http://themes.shamsoft.net/flaty/js/sin(x) = -0.00" }, { data: t, label: "http://themes.shamsoft.net/flaty/js/cos(x) = -0.00" }], { series: { lines: { show: true } }, crosshair: { mode: "x" }, grid: { hoverable: true, autoHighlight: false }, colors: ["#FCB322", "#A5D16C", "#52e136"], yaxis: { min: -1.2, max: 1.2 } }); var r = $("#chart_3 .legendLabel"); r.each(function () { $(this).css("width", $(this).width()) }); var i = null; var s = null; $("#chart_3").bind("plothover", function (e, t, n) { s = t; if (!i) i = setTimeout(o, 50) }) } function v() { function r() { n.setData([c()]); n.draw(); setTimeout(r, t) } if ($("#chart_4").size() == 0) { return } var e = { series: { shadowSize: 1 }, lines: { show: true, lineWidth: .5, fill: true, fillColor: { colors: [{ opacity: .1 }, { opacity: 1 }] } }, yaxis: { min: 0, max: 100, tickFormatter: function (e) { return e + "%" } }, xaxis: { show: false }, colors: ["#6ef146"], grid: { tickColor: "#a8a3a3", borderWidth: 0 } }; var t = 30; var n = $.plot($("#chart_4"), [c()], e); r() } function m() { function a() { $.plot($("#chart_5"), [e, n, r], { series: { stack: i, lines: { show: o, fill: true, steps: u }, bars: { show: s, barWidth: .6 } } }) } if ($("#chart_5").size() == 0) { return } var e = []; for (var t = 0; t <= 10; t += 1) e.push([t, parseInt(Math.random() * 30)]); var n = []; for (var t = 0; t <= 10; t += 1) n.push([t, parseInt(Math.random() * 30)]); var r = []; for (var t = 0; t <= 10; t += 1) r.push([t, parseInt(Math.random() * 30)]); var i = 0, s = true, o = false, u = false; $(".stackControls input").click(function (e) { e.preventDefault(); i = $(this).val() == "With stacking" ? true : null; a() }); $(".graphControls input").click(function (e) { e.preventDefault(); s = $(this).val().indexOf("Bars") != -1; o = $(this).val().indexOf("Lines") != -1; u = $(this).val().indexOf("steps") != -1; a() }); a() } function g() { function r(e, t, n) { if (!n) return; percent = parseFloat(n.series.percent).toFixed(2); $("#hover").html('<span style="font-weight: bold; color: ' + n.series.color + '">' + n.series.label + " (" + percent + "%)</span>") } function i(e, t, n) { if (!n) return; percent = parseFloat(n.series.percent).toFixed(2); alert("" + n.series.label + ": " + percent + "%") } if ($("#graph_1").size() == 0) { return } var e = []; var t = Math.floor(Math.random() * 10) + 1; for (var n = 0; n < t; n++) { e[n] = { label: "Series" + (n + 1), data: Math.floor((Math.random() - 1) * 100) + 1 } } $.plot($("#graph_1"), e, { series: { pie: { show: true, radius: 1, label: { show: true, radius: 1, formatter: function (e, t) { return '<div style="font-size:8pt;text-align:center;padding:2px;color:white;">' + e + "<br/>" + Math.round(t.percent) + "%</div>" }, background: { opacity: .8 } } } }, legend: { show: false } }); $.plot($("#graph_2"), e, { series: { pie: { show: true, radius: 1, label: { show: true, radius: 3 / 4, formatter: function (e, t) { return '<div style="font-size:8pt;text-align:center;padding:2px;color:white;">' + e + "<br/>" + Math.round(t.percent) + "%</div>" }, background: { opacity: .5 } } } }, legend: { show: false } }); $.plot($("#graph_3"), e, { series: { pie: { show: true } }, grid: { hoverable: true, clickable: true } }); $("#graph_3").bind("plothover", r); $("#graph_3").bind("plotclick", i); $.plot($("#graph_4"), e, { series: { pie: { innerRadius: .5, show: true } } }) } h(); p(); d(); v(); m(); g()
    }

    if (jQuery.plot) {
        var C = $("#visitors-chart"); if ($(C).size() == 0) { return } var k = [[1, 35], [2, 48], [3, 34], [4, 54], [5, 46], [6, 37], [7, 40], [8, 55], [9, 43], [10, 61], [11, 52], [12, 57], [13, 64], [14, 56], [15, 48], [16, 53], [17, 50], [18, 59], [19, 66], [20, 73], [21, 81], [22, 75], [23, 86], [24, 77], [25, 86], [26, 85], [27, 79], [28, 83], [29, 95], [30, 92]]; var L = [[1, 9], [2, 15], [3, 16], [4, 21], [5, 19], [6, 15], [7, 22], [8, 29], [9, 20], [10, 27], [11, 32], [12, 37], [13, 34], [14, 30], [15, 28], [16, 23], [17, 28], [18, 35], [19, 31], [20, 28], [21, 33], [22, 25], [23, 27], [24, 24], [25, 36], [26, 25], [27, 39], [28, 28], [29, 35], [30, 42]]; var A = ["#88bbc8", "#ed7a53", "#9FC569", "#bbdce3", "#9a3b1b", "#5a8022", "#2c7282"]; var O = { grid: { show: true, aboveData: true, color: "#3f3f3f", labelMargin: 5, axisMargin: 0, borderWidth: 0, borderColor: null, minBorderMargin: 5, clickable: true, hoverable: true, autoHighlight: true, mouseActiveRadius: 20 }, series: { grow: { active: false, stepMode: "linear", steps: 50, stepDelay: true }, lines: { show: true, fill: true, lineWidth: 3, steps: false }, points: { show: true, radius: 4, symbol: "circle", fill: true, borderColor: "#fff" } }, legend: { position: "ne", margin: [0, -25], noColumns: 0, labelBoxBorderColor: null, labelFormatter: function (e, t) { return e + "  " } }, yaxis: { min: 0 }, xaxis: { ticks: 11, tickDecimals: 0 }, colors: A, shadowSize: 1, tooltip: true, tooltipOpts: { content: "%s : %y.0", defaultTheme: false, shifts: { x: -30, y: -50 } } }; $.plot(C, [{ label: "Visits", data: k, lines: { fillColor: "#f2f7f9" }, points: { fillColor: "#88bbc8" } }, { label: "Unique Visits", data: L, lines: { fillColor: "#fff8f2" }, points: { fillColor: "#ed7a53" } }], O)
    }

})